{"ast":null,"code":"import _asyncToGenerator from \"/Users/cferte/Work/test-tuto/potatoDAO/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/cferte/Work/test-tuto/potatoDAO/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/cferte/Work/test-tuto/potatoDAO/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _regeneratorRuntime from \"/Users/cferte/Work/test-tuto/potatoDAO/node_modules/@babel/runtime/regenerator/index.js\";\nimport EventEmitter from \"eventemitter3\";\nimport { JsonRpcProvider } from \"@walletconnect/jsonrpc-provider\";\nimport { HttpConnection } from \"@walletconnect/jsonrpc-http-connection\";\nimport { getRpcUrl, signingMethods } from \"@walletconnect/utils\";\nimport { SignerConnection } from \"@walletconnect/signer-connection\";\n\nvar WalletConnectProvider = /*#__PURE__*/function () {\n  function WalletConnectProvider(opts) {\n    _classCallCheck(this, WalletConnectProvider);\n\n    this.events = new EventEmitter();\n    this.rpc = {\n      infuraId: opts === null || opts === void 0 ? void 0 : opts.infuraId,\n      custom: opts === null || opts === void 0 ? void 0 : opts.rpc\n    };\n    this.signer = new JsonRpcProvider(new SignerConnection(opts));\n    var chainId = this.signer.connection.chainId || (opts === null || opts === void 0 ? void 0 : opts.chainId) || 1;\n    this.http = this.setHttpProvider(chainId);\n    this.registerEventListeners();\n  }\n\n  _createClass(WalletConnectProvider, [{\n    key: \"connected\",\n    get: function get() {\n      return this.signer.connection.connected;\n    }\n  }, {\n    key: \"connector\",\n    get: function get() {\n      return this.signer.connection.connector;\n    }\n  }, {\n    key: \"accounts\",\n    get: function get() {\n      return this.signer.connection.accounts;\n    }\n  }, {\n    key: \"chainId\",\n    get: function get() {\n      return this.signer.connection.chainId;\n    }\n  }, {\n    key: \"rpcUrl\",\n    get: function get() {\n      var _a;\n\n      return ((_a = this.http) === null || _a === void 0 ? void 0 : _a.connection).url || \"\";\n    }\n  }, {\n    key: \"request\",\n    value: function () {\n      var _request = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(args) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.t0 = args.method;\n                _context.next = _context.t0 === \"eth_requestAccounts\" ? 3 : _context.t0 === \"eth_accounts\" ? 6 : _context.t0 === \"eth_chainId\" ? 7 : 8;\n                break;\n\n              case 3:\n                _context.next = 5;\n                return this.connect();\n\n              case 5:\n                return _context.abrupt(\"return\", this.signer.connection.accounts);\n\n              case 6:\n                return _context.abrupt(\"return\", this.signer.connection.accounts);\n\n              case 7:\n                return _context.abrupt(\"return\", this.signer.connection.chainId);\n\n              case 8:\n                return _context.abrupt(\"break\", 9);\n\n              case 9:\n                if (!signingMethods.includes(args.method)) {\n                  _context.next = 11;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.signer.request(args));\n\n              case 11:\n                if (!(typeof this.http === \"undefined\")) {\n                  _context.next = 13;\n                  break;\n                }\n\n                throw new Error(\"Cannot request JSON-RPC method (\".concat(args.method, \") without provided rpc url\"));\n\n              case 13:\n                return _context.abrupt(\"return\", this.http.request(args));\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function request(_x) {\n        return _request.apply(this, arguments);\n      }\n\n      return request;\n    }()\n  }, {\n    key: \"sendAsync\",\n    value: function sendAsync(args, callback) {\n      this.request(args).then(function (response) {\n        return callback(null, response);\n      }).catch(function (error) {\n        return callback(error, undefined);\n      });\n    }\n  }, {\n    key: \"enable\",\n    value: function () {\n      var _enable = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.request({\n                  method: \"eth_requestAccounts\"\n                });\n\n              case 2:\n                accounts = _context2.sent;\n                return _context2.abrupt(\"return\", accounts);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function enable() {\n        return _enable.apply(this, arguments);\n      }\n\n      return enable;\n    }()\n  }, {\n    key: \"connect\",\n    value: function () {\n      var _connect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (this.signer.connection.connected) {\n                  _context3.next = 3;\n                  break;\n                }\n\n                _context3.next = 3;\n                return this.signer.connect();\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function connect() {\n        return _connect.apply(this, arguments);\n      }\n\n      return connect;\n    }()\n  }, {\n    key: \"disconnect\",\n    value: function () {\n      var _disconnect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!this.signer.connection.connected) {\n                  _context4.next = 3;\n                  break;\n                }\n\n                _context4.next = 3;\n                return this.signer.disconnect();\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function disconnect() {\n        return _disconnect.apply(this, arguments);\n      }\n\n      return disconnect;\n    }()\n  }, {\n    key: \"on\",\n    value: function on(event, listener) {\n      this.events.on(event, listener);\n    }\n  }, {\n    key: \"once\",\n    value: function once(event, listener) {\n      this.events.once(event, listener);\n    }\n  }, {\n    key: \"removeListener\",\n    value: function removeListener(event, listener) {\n      this.events.removeListener(event, listener);\n    }\n  }, {\n    key: \"off\",\n    value: function off(event, listener) {\n      this.events.off(event, listener);\n    }\n  }, {\n    key: \"isWalletConnect\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"registerEventListeners\",\n    value: function registerEventListeners() {\n      var _this = this;\n\n      this.signer.connection.on(\"accountsChanged\", function (accounts) {\n        _this.events.emit(\"accountsChanged\", accounts);\n      });\n      this.signer.connection.on(\"chainChanged\", function (chainId) {\n        _this.http = _this.setHttpProvider(chainId);\n\n        _this.events.emit(\"chainChanged\", chainId);\n      });\n      this.signer.on(\"disconnect\", function () {\n        _this.events.emit(\"disconnect\");\n      });\n    }\n  }, {\n    key: \"setHttpProvider\",\n    value: function setHttpProvider(chainId) {\n      var rpcUrl = getRpcUrl(chainId, this.rpc);\n      if (typeof rpcUrl === \"undefined\") return undefined;\n      var http = new JsonRpcProvider(new HttpConnection(rpcUrl));\n      return http;\n    }\n  }]);\n\n  return WalletConnectProvider;\n}();\n\nexport default WalletConnectProvider;","map":{"version":3,"mappings":"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","names":["EventEmitter","JsonRpcProvider","HttpConnection","getRpcUrl","signingMethods","SignerConnection","WalletConnectProvider","opts","rpc","infuraId","custom","signer","chainId","connection","http","setHttpProvider","registerEventListeners","connected","connector","accounts","_a","url","args","method","connect","includes","request","Error","callback","then","response","catch","error","undefined","disconnect","event","listener","events","on","once","removeListener","off","emit","rpcUrl"],"sourceRoot":"","sources":["../../src/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}